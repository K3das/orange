FROM golang:1.24-alpine as build

RUN apk add --update --no-cache build-base

RUN --mount=type=cache,target=/root/.cache/go-build \
    CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest

WORKDIR /go/src/app

COPY go.mod .
COPY go.sum .

RUN --mount=type=cache,id=orange_mod,target=/go/pkg/mod \
    go mod download

COPY . .

RUN --mount=type=cache,id=orange_mod,target=/go/pkg/mod \
    --mount=type=cache,id=orange_build,target=/root/.cache/go-build \
    CGO_ENABLED=1 GOOS=linux go build \
    -trimpath \
    -o out/orange \
    -v \
    -ldflags="-X main.CommitHash=$(cat .git/$(cat .git/HEAD | cut -d' ' -f2) | cut -c1-12)" \
    # delve
    -gcflags "all=-N -l" \
    ./cmd/orange

FROM alpine

RUN apk add --no-cache ffmpeg
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

COPY --from=build /go/bin/dlv /dlv
COPY --from=build /go/src/app/out/ /opt/app/

WORKDIR /opt/app

USER appuser

ENTRYPOINT [ "/opt/app/orange" ]